{
  "swagger": "2.0",
  "info": {
    "title": "external/service/organisation.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/Organisations": {
      "get": {
        "summary": "Get the list of Organisations.",
        "operationId": "OrganisationService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceListOrganisationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Max number of Organisations to return in the result-set.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset in the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "search",
            "description": "If set, the given string will be used to search on name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "description": "If set, filters the result set to the Organisations of the user.\nOnly global API keys are able to filter by this field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganisationService"
        ]
      },
      "post": {
        "summary": "Create a new Organisation.",
        "operationId": "OrganisationService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceCreateOrganisationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceCreateOrganisationRequest"
            }
          }
        ],
        "tags": [
          "OrganisationService"
        ]
      }
    },
    "/api/Organisations/{id}": {
      "get": {
        "summary": "Get the Organisation for the given ID.",
        "operationId": "OrganisationService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceGetOrganisationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Organisation ID.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrganisationService"
        ]
      },
      "delete": {
        "summary": "Delete the Organisation with the given ID.",
        "operationId": "OrganisationService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Organisation ID.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OrganisationService"
        ]
      }
    },
    "/api/Organisations/{organisation.id}": {
      "put": {
        "summary": "Update the given Organisation.",
        "operationId": "OrganisationService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "organisation.id",
            "description": "Organisation ID (UUID).\nNote: this value will be automatically generated on create.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceUpdateOrganisationRequest"
            }
          }
        ],
        "tags": [
          "OrganisationService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "serviceCreateOrganisationRequest": {
      "type": "object",
      "properties": {
        "Organisation": {
          "$ref": "#/definitions/serviceOrganisation",
          "description": "Organisation object to create."
        }
      }
    },
    "serviceCreateOrganisationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Organisation ID."
        }
      }
    },
    "serviceGetOrganisationResponse": {
      "type": "object",
      "properties": {
        "Organisation": {
          "$ref": "#/definitions/serviceOrganisation",
          "description": "Organisation object."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      }
    },
    "serviceListOrganisationsResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of Organisations."
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/serviceOrganisationListItem"
          },
          "description": "Result-set."
        }
      }
    },
    "serviceOrganisation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Organisation ID (UUID).\nNote: this value will be automatically generated on create."
        },
        "name": {
          "type": "string",
          "title": "Organisation name,"
        },
        "description": {
          "type": "string",
          "description": "Organisation description."
        },
        "canHaveGateways": {
          "type": "boolean",
          "title": "Can the Organisation create and \"own\" Gateways?"
        },
        "maxGatewayCount": {
          "type": "integer",
          "format": "int64",
          "description": "Max. gateway count for Organisation.\nWhen set to 0, the Organisation can have unlimited gateways."
        },
        "maxDeviceCount": {
          "type": "integer",
          "format": "int64",
          "description": "Max. device count for Organisation.\nWhen set to 0, the Organisation can have unlimited devices."
        },
        "privateGatewaysUp": {
          "type": "boolean",
          "description": "Private gateways (uplink).\nIf enabled, then uplink messages will not be shared with other Organisations."
        },
        "privateGatewaysDown": {
          "type": "boolean",
          "description": "Private gateways (downlink).\nIf enabled, then other Organisations will not be able to schedule downlink\nmessages through the gateways of this Organisation. For example, in case you\ndo want to share uplinks with other Organisations (private_gateways_up=false),\nbut you want to prevent other Organisations from using gateway airtime."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags (user defined).\nThese tags can be used to add additional information to the Organisation. These\ntags are NOT exposed in the integration events."
        }
      }
    },
    "serviceOrganisationListItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Organisation ID (UUID)."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        },
        "name": {
          "type": "string",
          "description": "Organisation name."
        },
        "canHaveGateways": {
          "type": "boolean",
          "title": "Can the Organisation create and \"own\" Gateways?"
        },
        "privateGatewaysUp": {
          "type": "boolean",
          "description": "Private gateways (uplink)."
        },
        "privateGatewaysDown": {
          "type": "boolean",
          "description": "Private gateways (downlink)."
        },
        "maxGatewayCount": {
          "type": "integer",
          "format": "int64",
          "description": "Max gateway count.\n0 = unlimited."
        },
        "maxDeviceCount": {
          "type": "integer",
          "format": "int64",
          "description": "Max device count.\n0 = unlimited."
        }
      }
    },
    "serviceUpdateOrganisationRequest": {
      "type": "object",
      "properties": {
        "Organisation": {
          "$ref": "#/definitions/serviceOrganisation",
          "description": "Organisation object."
        }
      }
    }
  }
}
