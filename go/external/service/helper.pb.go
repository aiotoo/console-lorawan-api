// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.4
// source: external/service/helper.proto

package service

import (
	context "context"
	util "github.com/aiotoo/console-lorawan-api/go/v4/util"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListMacVerionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MacVersion.
	MacVersion []util.MacVersion `protobuf:"varint,1,rep,packed,name=mac_version,json=macVersion,proto3,enum=util.MacVersion" json:"mac_version,omitempty"`
}

func (x *ListMacVerionResponse) Reset() {
	*x = ListMacVerionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_service_helper_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMacVerionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMacVerionResponse) ProtoMessage() {}

func (x *ListMacVerionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_service_helper_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMacVerionResponse.ProtoReflect.Descriptor instead.
func (*ListMacVerionResponse) Descriptor() ([]byte, []int) {
	return file_external_service_helper_proto_rawDescGZIP(), []int{0}
}

func (x *ListMacVerionResponse) GetMacVersion() []util.MacVersion {
	if x != nil {
		return x.MacVersion
	}
	return nil
}

type ListEnumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MacVersion.
	MacVersion []util.MacVersion `protobuf:"varint,1,rep,packed,name=mac_version,json=macVersion,proto3,enum=util.MacVersion" json:"mac_version,omitempty"`
	// DeviceClass
	DeviceClass []util.DeviceClass `protobuf:"varint,2,rep,packed,name=device_class,json=deviceClass,proto3,enum=util.DeviceClass" json:"device_class,omitempty"`
	// JoinMode
	DeviceJoinMode []util.JoinMode `protobuf:"varint,3,rep,packed,name=device_join_mode,json=deviceJoinMode,proto3,enum=util.JoinMode" json:"device_join_mode,omitempty"`
	// Payload Codec
	PayloadCodecRuntime []util.CodecRuntime `protobuf:"varint,4,rep,packed,name=payload_codec_runtime,json=payloadCodecRuntime,proto3,enum=util.CodecRuntime" json:"payload_codec_runtime,omitempty"`
	// AdrAlgorithm
	Result []*AdrAlgorithmListItem `protobuf:"bytes,5,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListEnumResponse) Reset() {
	*x = ListEnumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_service_helper_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnumResponse) ProtoMessage() {}

func (x *ListEnumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_service_helper_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnumResponse.ProtoReflect.Descriptor instead.
func (*ListEnumResponse) Descriptor() ([]byte, []int) {
	return file_external_service_helper_proto_rawDescGZIP(), []int{1}
}

func (x *ListEnumResponse) GetMacVersion() []util.MacVersion {
	if x != nil {
		return x.MacVersion
	}
	return nil
}

func (x *ListEnumResponse) GetDeviceClass() []util.DeviceClass {
	if x != nil {
		return x.DeviceClass
	}
	return nil
}

func (x *ListEnumResponse) GetDeviceJoinMode() []util.JoinMode {
	if x != nil {
		return x.DeviceJoinMode
	}
	return nil
}

func (x *ListEnumResponse) GetPayloadCodecRuntime() []util.CodecRuntime {
	if x != nil {
		return x.PayloadCodecRuntime
	}
	return nil
}

func (x *ListEnumResponse) GetResult() []*AdrAlgorithmListItem {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListRegionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Configured regions.
	Regions []*RegionListItem `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty"`
}

func (x *ListRegionsResponse) Reset() {
	*x = ListRegionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_service_helper_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRegionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegionsResponse) ProtoMessage() {}

func (x *ListRegionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_service_helper_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegionsResponse.ProtoReflect.Descriptor instead.
func (*ListRegionsResponse) Descriptor() ([]byte, []int) {
	return file_external_service_helper_proto_rawDescGZIP(), []int{2}
}

func (x *ListRegionsResponse) GetRegions() []*RegionListItem {
	if x != nil {
		return x.Regions
	}
	return nil
}

type RegionListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Region.
	Region util.Region `protobuf:"varint,2,opt,name=region,proto3,enum=util.Region" json:"region,omitempty"`
	// Description.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *RegionListItem) Reset() {
	*x = RegionListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_service_helper_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionListItem) ProtoMessage() {}

func (x *RegionListItem) ProtoReflect() protoreflect.Message {
	mi := &file_external_service_helper_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionListItem.ProtoReflect.Descriptor instead.
func (*RegionListItem) Descriptor() ([]byte, []int) {
	return file_external_service_helper_proto_rawDescGZIP(), []int{3}
}

func (x *RegionListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegionListItem) GetRegion() util.Region {
	if x != nil {
		return x.Region
	}
	return util.Region(0)
}

func (x *RegionListItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Region ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRegionRequest) Reset() {
	*x = GetRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_service_helper_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionRequest) ProtoMessage() {}

func (x *GetRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_service_helper_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionRequest.ProtoReflect.Descriptor instead.
func (*GetRegionRequest) Descriptor() ([]byte, []int) {
	return file_external_service_helper_proto_rawDescGZIP(), []int{4}
}

func (x *GetRegionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Region.
	Region util.Region `protobuf:"varint,2,opt,name=region,proto3,enum=util.Region" json:"region,omitempty"`
	// User information.
	UserInfo string `protobuf:"bytes,3,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	// Uplink channels.
	UplinkChannels []*RegionChannel `protobuf:"bytes,4,rep,name=uplink_channels,json=uplinkChannels,proto3" json:"uplink_channels,omitempty"`
	// RX1 delay.
	Rx1Delay uint32 `protobuf:"varint,5,opt,name=rx1_delay,json=rx1Delay,proto3" json:"rx1_delay,omitempty"`
	// RX1 data-rate offset.
	Rx1DrOffset uint32 `protobuf:"varint,6,opt,name=rx1_dr_offset,json=rx1DrOffset,proto3" json:"rx1_dr_offset,omitempty"`
	// RX2 DR.
	Rx2Dr uint32 `protobuf:"varint,7,opt,name=rx2_dr,json=rx2Dr,proto3" json:"rx2_dr,omitempty"`
	// RX2 frequency.
	Rx2Frequency uint32 `protobuf:"varint,8,opt,name=rx2_frequency,json=rx2Frequency,proto3" json:"rx2_frequency,omitempty"`
	// Class-B ping-slot DR.
	ClassBPingSlotDr uint32 `protobuf:"varint,9,opt,name=class_b_ping_slot_dr,json=classBPingSlotDr,proto3" json:"class_b_ping_slot_dr,omitempty"`
	// Class-B ping-slot frequency.
	ClassBPingSlotFrequency uint32 `protobuf:"varint,10,opt,name=class_b_ping_slot_frequency,json=classBPingSlotFrequency,proto3" json:"class_b_ping_slot_frequency,omitempty"`
	// Region description.
	Description string `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *GetRegionResponse) Reset() {
	*x = GetRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_service_helper_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionResponse) ProtoMessage() {}

func (x *GetRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_external_service_helper_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionResponse.ProtoReflect.Descriptor instead.
func (*GetRegionResponse) Descriptor() ([]byte, []int) {
	return file_external_service_helper_proto_rawDescGZIP(), []int{5}
}

func (x *GetRegionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetRegionResponse) GetRegion() util.Region {
	if x != nil {
		return x.Region
	}
	return util.Region(0)
}

func (x *GetRegionResponse) GetUserInfo() string {
	if x != nil {
		return x.UserInfo
	}
	return ""
}

func (x *GetRegionResponse) GetUplinkChannels() []*RegionChannel {
	if x != nil {
		return x.UplinkChannels
	}
	return nil
}

func (x *GetRegionResponse) GetRx1Delay() uint32 {
	if x != nil {
		return x.Rx1Delay
	}
	return 0
}

func (x *GetRegionResponse) GetRx1DrOffset() uint32 {
	if x != nil {
		return x.Rx1DrOffset
	}
	return 0
}

func (x *GetRegionResponse) GetRx2Dr() uint32 {
	if x != nil {
		return x.Rx2Dr
	}
	return 0
}

func (x *GetRegionResponse) GetRx2Frequency() uint32 {
	if x != nil {
		return x.Rx2Frequency
	}
	return 0
}

func (x *GetRegionResponse) GetClassBPingSlotDr() uint32 {
	if x != nil {
		return x.ClassBPingSlotDr
	}
	return 0
}

func (x *GetRegionResponse) GetClassBPingSlotFrequency() uint32 {
	if x != nil {
		return x.ClassBPingSlotFrequency
	}
	return 0
}

func (x *GetRegionResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RegionChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Frequency (Hz).
	Frequency uint32 `protobuf:"varint,1,opt,name=frequency,proto3" json:"frequency,omitempty"`
	// Min DR.
	DrMin uint32 `protobuf:"varint,2,opt,name=dr_min,json=drMin,proto3" json:"dr_min,omitempty"`
	// Max DR.
	DrMax uint32 `protobuf:"varint,3,opt,name=dr_max,json=drMax,proto3" json:"dr_max,omitempty"`
}

func (x *RegionChannel) Reset() {
	*x = RegionChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_service_helper_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionChannel) ProtoMessage() {}

func (x *RegionChannel) ProtoReflect() protoreflect.Message {
	mi := &file_external_service_helper_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionChannel.ProtoReflect.Descriptor instead.
func (*RegionChannel) Descriptor() ([]byte, []int) {
	return file_external_service_helper_proto_rawDescGZIP(), []int{6}
}

func (x *RegionChannel) GetFrequency() uint32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *RegionChannel) GetDrMin() uint32 {
	if x != nil {
		return x.DrMin
	}
	return 0
}

func (x *RegionChannel) GetDrMax() uint32 {
	if x != nil {
		return x.DrMax
	}
	return 0
}

type AdrAlgorithmListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Algorithm ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Algorithm name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AdrAlgorithmListItem) Reset() {
	*x = AdrAlgorithmListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_service_helper_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdrAlgorithmListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdrAlgorithmListItem) ProtoMessage() {}

func (x *AdrAlgorithmListItem) ProtoReflect() protoreflect.Message {
	mi := &file_external_service_helper_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdrAlgorithmListItem.ProtoReflect.Descriptor instead.
func (*AdrAlgorithmListItem) Descriptor() ([]byte, []int) {
	return file_external_service_helper_proto_rawDescGZIP(), []int{7}
}

func (x *AdrAlgorithmListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdrAlgorithmListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_external_service_helper_proto protoreflect.FileDescriptor

var file_external_service_helper_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x56,
	0x65, 0x72, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x4d, 0x61, 0x63, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0xb4, 0x02, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x2e, 0x4d, 0x61, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6d, 0x61,
	0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x38,
	0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x46, 0x0a, 0x15, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x63, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x13, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x35, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x72, 0x41, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x48, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x68, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x22, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xb4, 0x03, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0f, 0x75, 0x70, 0x6c, 0x69,
	0x6e, 0x6b, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0e, 0x75, 0x70, 0x6c, 0x69, 0x6e,
	0x6b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x78, 0x31,
	0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x78,
	0x31, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x78, 0x31, 0x5f, 0x64, 0x72,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72,
	0x78, 0x31, 0x44, 0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x78,
	0x32, 0x5f, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x78, 0x32, 0x44,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x78, 0x32, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x78, 0x32, 0x46, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2e, 0x0a, 0x14, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x62, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x64, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x42, 0x50, 0x69, 0x6e, 0x67,
	0x53, 0x6c, 0x6f, 0x74, 0x44, 0x72, 0x12, 0x3c, 0x0a, 0x1b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x62, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x42, 0x50, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x72, 0x4d, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06,
	0x64, 0x72, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x72,
	0x4d, 0x61, 0x78, 0x22, 0x3a, 0x0a, 0x14, 0x41, 0x64, 0x72, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32,
	0x96, 0x03, 0x0a, 0x0d, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x60, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x64, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12,
	0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x69, 0x0a, 0x0e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x61, 0x63, 0x56, 0x65, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x63, 0x56, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x63, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x69, 0x6f, 0x74, 0x6f, 0x6f, 0x2f, 0x63, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2d, 0x6c, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x6e, 0x2d, 0x61, 0x70,
	0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x34, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_external_service_helper_proto_rawDescOnce sync.Once
	file_external_service_helper_proto_rawDescData = file_external_service_helper_proto_rawDesc
)

func file_external_service_helper_proto_rawDescGZIP() []byte {
	file_external_service_helper_proto_rawDescOnce.Do(func() {
		file_external_service_helper_proto_rawDescData = protoimpl.X.CompressGZIP(file_external_service_helper_proto_rawDescData)
	})
	return file_external_service_helper_proto_rawDescData
}

var file_external_service_helper_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_external_service_helper_proto_goTypes = []any{
	(*ListMacVerionResponse)(nil), // 0: service.ListMacVerionResponse
	(*ListEnumResponse)(nil),      // 1: service.ListEnumResponse
	(*ListRegionsResponse)(nil),   // 2: service.ListRegionsResponse
	(*RegionListItem)(nil),        // 3: service.RegionListItem
	(*GetRegionRequest)(nil),      // 4: service.GetRegionRequest
	(*GetRegionResponse)(nil),     // 5: service.GetRegionResponse
	(*RegionChannel)(nil),         // 6: service.RegionChannel
	(*AdrAlgorithmListItem)(nil),  // 7: service.AdrAlgorithmListItem
	(util.MacVersion)(0),          // 8: util.MacVersion
	(util.DeviceClass)(0),         // 9: util.DeviceClass
	(util.JoinMode)(0),            // 10: util.JoinMode
	(util.CodecRuntime)(0),        // 11: util.CodecRuntime
	(util.Region)(0),              // 12: util.Region
	(*emptypb.Empty)(nil),         // 13: google.protobuf.Empty
}
var file_external_service_helper_proto_depIdxs = []int32{
	8,  // 0: service.ListMacVerionResponse.mac_version:type_name -> util.MacVersion
	8,  // 1: service.ListEnumResponse.mac_version:type_name -> util.MacVersion
	9,  // 2: service.ListEnumResponse.device_class:type_name -> util.DeviceClass
	10, // 3: service.ListEnumResponse.device_join_mode:type_name -> util.JoinMode
	11, // 4: service.ListEnumResponse.payload_codec_runtime:type_name -> util.CodecRuntime
	7,  // 5: service.ListEnumResponse.result:type_name -> service.AdrAlgorithmListItem
	3,  // 6: service.ListRegionsResponse.regions:type_name -> service.RegionListItem
	12, // 7: service.RegionListItem.region:type_name -> util.Region
	12, // 8: service.GetRegionResponse.region:type_name -> util.Region
	6,  // 9: service.GetRegionResponse.uplink_channels:type_name -> service.RegionChannel
	13, // 10: service.HelperService.ListRegions:input_type -> google.protobuf.Empty
	4,  // 11: service.HelperService.GetRegion:input_type -> service.GetRegionRequest
	13, // 12: service.HelperService.ListMacVerison:input_type -> google.protobuf.Empty
	13, // 13: service.HelperService.ListEnum:input_type -> google.protobuf.Empty
	2,  // 14: service.HelperService.ListRegions:output_type -> service.ListRegionsResponse
	5,  // 15: service.HelperService.GetRegion:output_type -> service.GetRegionResponse
	0,  // 16: service.HelperService.ListMacVerison:output_type -> service.ListMacVerionResponse
	1,  // 17: service.HelperService.ListEnum:output_type -> service.ListEnumResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_external_service_helper_proto_init() }
func file_external_service_helper_proto_init() {
	if File_external_service_helper_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_external_service_helper_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ListMacVerionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_service_helper_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListEnumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_service_helper_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListRegionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_service_helper_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RegionListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_service_helper_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_service_helper_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_service_helper_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*RegionChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_service_helper_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AdrAlgorithmListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_external_service_helper_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_external_service_helper_proto_goTypes,
		DependencyIndexes: file_external_service_helper_proto_depIdxs,
		MessageInfos:      file_external_service_helper_proto_msgTypes,
	}.Build()
	File_external_service_helper_proto = out.File
	file_external_service_helper_proto_rawDesc = nil
	file_external_service_helper_proto_goTypes = nil
	file_external_service_helper_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HelperServiceClient is the client API for HelperService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelperServiceClient interface {
	// ListRegions lists the available (configured) regions.
	ListRegions(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListRegionsResponse, error)
	// GetRegion returns the region details for the given region.
	GetRegion(ctx context.Context, in *GetRegionRequest, opts ...grpc.CallOption) (*GetRegionResponse, error)
	// ListMacVerison lists the available (configured) LoRaWAN MacVersion.
	ListMacVerison(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListMacVerionResponse, error)
	// ListEnumResponse lists the available enum.
	ListEnum(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListEnumResponse, error)
}

type helperServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHelperServiceClient(cc grpc.ClientConnInterface) HelperServiceClient {
	return &helperServiceClient{cc}
}

func (c *helperServiceClient) ListRegions(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListRegionsResponse, error) {
	out := new(ListRegionsResponse)
	err := c.cc.Invoke(ctx, "/service.HelperService/ListRegions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helperServiceClient) GetRegion(ctx context.Context, in *GetRegionRequest, opts ...grpc.CallOption) (*GetRegionResponse, error) {
	out := new(GetRegionResponse)
	err := c.cc.Invoke(ctx, "/service.HelperService/GetRegion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helperServiceClient) ListMacVerison(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListMacVerionResponse, error) {
	out := new(ListMacVerionResponse)
	err := c.cc.Invoke(ctx, "/service.HelperService/ListMacVerison", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helperServiceClient) ListEnum(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListEnumResponse, error) {
	out := new(ListEnumResponse)
	err := c.cc.Invoke(ctx, "/service.HelperService/ListEnum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelperServiceServer is the server API for HelperService service.
type HelperServiceServer interface {
	// ListRegions lists the available (configured) regions.
	ListRegions(context.Context, *emptypb.Empty) (*ListRegionsResponse, error)
	// GetRegion returns the region details for the given region.
	GetRegion(context.Context, *GetRegionRequest) (*GetRegionResponse, error)
	// ListMacVerison lists the available (configured) LoRaWAN MacVersion.
	ListMacVerison(context.Context, *emptypb.Empty) (*ListMacVerionResponse, error)
	// ListEnumResponse lists the available enum.
	ListEnum(context.Context, *emptypb.Empty) (*ListEnumResponse, error)
}

// UnimplementedHelperServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHelperServiceServer struct {
}

func (*UnimplementedHelperServiceServer) ListRegions(context.Context, *emptypb.Empty) (*ListRegionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRegions not implemented")
}
func (*UnimplementedHelperServiceServer) GetRegion(context.Context, *GetRegionRequest) (*GetRegionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegion not implemented")
}
func (*UnimplementedHelperServiceServer) ListMacVerison(context.Context, *emptypb.Empty) (*ListMacVerionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMacVerison not implemented")
}
func (*UnimplementedHelperServiceServer) ListEnum(context.Context, *emptypb.Empty) (*ListEnumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEnum not implemented")
}

func RegisterHelperServiceServer(s *grpc.Server, srv HelperServiceServer) {
	s.RegisterService(&_HelperService_serviceDesc, srv)
}

func _HelperService_ListRegions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelperServiceServer).ListRegions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.HelperService/ListRegions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelperServiceServer).ListRegions(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelperService_GetRegion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelperServiceServer).GetRegion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.HelperService/GetRegion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelperServiceServer).GetRegion(ctx, req.(*GetRegionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelperService_ListMacVerison_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelperServiceServer).ListMacVerison(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.HelperService/ListMacVerison",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelperServiceServer).ListMacVerison(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelperService_ListEnum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelperServiceServer).ListEnum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.HelperService/ListEnum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelperServiceServer).ListEnum(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelperService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.HelperService",
	HandlerType: (*HelperServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListRegions",
			Handler:    _HelperService_ListRegions_Handler,
		},
		{
			MethodName: "GetRegion",
			Handler:    _HelperService_GetRegion_Handler,
		},
		{
			MethodName: "ListMacVerison",
			Handler:    _HelperService_ListMacVerison_Handler,
		},
		{
			MethodName: "ListEnum",
			Handler:    _HelperService_ListEnum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "external/service/helper.proto",
}
