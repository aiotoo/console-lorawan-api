syntax = "proto3";

package service;

option go_package = "github.com/aiotoo/console-lorawan-api/go/v4/external/service";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "util/util.proto";



service HelperService {
 // ListRegions lists the available (configured) regions.
  rpc ListRegions(google.protobuf.Empty) returns (ListRegionsResponse) {
    option (google.api.http) = {
      get : "/api/helper/regions"
    };
  }

  // GetRegion returns the region details for the given region.
  rpc GetRegion(GetRegionRequest) returns (GetRegionResponse) {
    option (google.api.http) = {
      get : "/api/helper/regions/{id}"
    };
  }

  // ListMacVerison lists the available (configured) LoRaWAN MacVersion.
  rpc ListMacVerison(google.protobuf.Empty) returns (ListMacVerionResponse) {
    option (google.api.http) = {
      get : "/api/helper/mac_version"
    };
  }

  //  ListEnumResponse lists the available enum.
  rpc ListEnum(google.protobuf.Empty) returns (ListEnumResponse) {
    option (google.api.http) = {
      get : "/api/helper"
    };
  }
}

message ListMacVerionResponse {
   // MacVersion.
  repeated util.MacVersion mac_version = 1;

}


message ListEnumResponse {
   //MacVersion.
  repeated util.MacVersion mac_version = 1;

  //DeviceClass
  repeated util.DeviceClass device_class = 2;

   //JoinMode
  repeated util.JoinMode device_join_mode = 3;

  //Payload Codec
  repeated util.CodecRuntime payload_codec_runtime = 4;

  //AdrAlgorithm
  repeated AdrAlgorithmListItem adr_algorithms = 5;

  repeated util.RegParamsRevision reg_params_revision = 6;

  RegionsData region = 7;

}

message ListRegionsResponse {
  // Configured regions.
  repeated RegionListItem regions = 1;
}

message RegionListItem {
  // ID.
  string id = 1;

  // Region.
  util.Region region = 2;

  // Description.
  string description = 3;
}

message GetRegionRequest {
  // Region ID.
  string id = 1;
}

message GetRegionResponse {
  // ID.
  string id = 1;

  // Region.
  util.Region region = 2;

  // User information.
  string user_info = 3;

  // Uplink channels.
  repeated RegionChannel uplink_channels = 4;

  // RX1 delay.
  uint32 rx1_delay = 5;

  // RX1 data-rate offset.
  uint32 rx1_dr_offset = 6;

  // RX2 DR.
  uint32 rx2_dr = 7;

  // RX2 frequency.
  uint32 rx2_frequency = 8;

  // Class-B ping-slot DR.
  uint32 class_b_ping_slot_dr = 9;

  // Class-B ping-slot frequency.
  uint32 class_b_ping_slot_frequency = 10;

  // Region description.
  string description = 11;
}

message RegionChannel {
  // Frequency (Hz).
  uint32 frequency = 1;

  // Min DR.
  uint32 dr_min = 2;

  // Max DR.
  uint32 dr_max = 3;
}


message AdrAlgorithmListItem {
  // Algorithm ID.
  string id = 1;

  // Algorithm name.
  string name = 2;
}

message Region {
  string id = 1;
  string description = 2;
}

message RegionsData {
  map<string, RegionList> regions = 1;
}

message RegionList {
  repeated Region items = 1;
}