syntax = "proto3";

package service;

option go_package = "github.com/aiotoo/console-lorawan-api/go/v4/external/service";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service OrganisationService{

// Get the Organisation for the given ID.
  rpc Get(GetOrganisationRequest) returns (GetOrganisationResponse) {
    option (google.api.http) = {
      get : "/api/organisation/{id}"
    };
  }

   // Get the list of Organisation.
  rpc List(ListOrganisationsRequest) returns (ListOrganisationsResponse) {
    option (google.api.http) = {
      get : "/api/organisations"
    };
  }

    // Create a new tenant.
    rpc Create(CreateOrganisationsRequest) returns (CreateOrganisationsResponse) {
      option (google.api.http) = {
        post : "/api/organisations"
        body : "*"
      };
    }

    // Update the given tenant.
    rpc Update(UpdateOrganisationsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put : "/api/Organisations/{Organisations.id}"
        body : "*"
      };
    }
  
    // Delete the tenant with the given ID.
    rpc Delete(DeleteOrganisationsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete : "/api/Organisations/{id}"
      };
    }
}


message Organisation {
  // Organisation ID (UUID).
  // Note: this value will be automatically generated on create.
  string id = 1;

  // Organisation name,
  string name = 2;

  // Organisation description.
  string description = 3;

  // Can the tenant create and "own" Gateways?
  bool can_have_gateways = 4;

  // Max. gateway count for tenant.
  // When set to 0, the tenant can have unlimited gateways.
  uint32 max_gateway_count = 5;

  // Max. device count for tenant.
  // When set to 0, the tenant can have unlimited devices.
  uint32 max_device_count = 6;

  // Private gateways (uplink).
  // If enabled, then uplink messages will not be shared with other tenants.
  bool private_gateways_up = 7;

  // Private gateways (downlink).
  // If enabled, then other tenants will not be able to schedule downlink
  // messages through the gateways of this tenant. For example, in case you
  // do want to share uplinks with other tenants (private_gateways_up=false),
  // but you want to prevent other tenants from using gateway airtime.
  bool private_gateways_down = 8;

  // Tags (user defined).
  // These tags can be used to add additional information to the tenant. These
  // tags are NOT exposed in the integration events.
  map<string, string> tags = 9;
}

message UpdateOrganisationsRequest {
  // Organisation object.
  Organisation organisation = 1;
}

message DeleteOrganisationsRequest {
  // Organisation ID.
  string id = 1;
}

message CreateOrganisationsRequest {
  // Organisation object.
  Organisation organisation = 1;
}

message CreateOrganisationsResponse {
  // Organisation ID.
  string id = 1;
}


message GetOrganisationRequest {
  // Organisation ID.
  string id = 1;
}

message GetOrganisationResponse {
  // Organisation object.
  Organisation organisation = 1;

  // Created at timestamp.
  google.protobuf.Timestamp created_at = 2;

  // Last update timestamp.
  google.protobuf.Timestamp updated_at = 3;
}

message ListOrganisationsRequest {
  // Max number of tenants to return in the result-set.
  uint32 limit = 1;

  // Offset in the result-set (for pagination).
  uint32 offset = 2;

  // If set, the given string will be used to search on name.
  string search = 3;

  // If set, filters the result set to the tenants of the user.
  // Only global API keys are able to filter by this field.
  string user_id = 4;
}

message OrganisationListItem {
  // Organisation ID (UUID).
  string id = 1;

  // Created at timestamp.
  google.protobuf.Timestamp created_at = 2;

  // Last update timestamp.
  google.protobuf.Timestamp updated_at = 3;

  // Organisation name.
  string name = 4;

  // Can the tenant create and "own" Gateways?
  bool can_have_gateways = 5;

  // Private gateways (uplink).
  bool private_gateways_up = 6;

  // Private gateways (downlink).
  bool private_gateways_down = 9;

  // Max gateway count.
  // 0 = unlimited.
  uint32 max_gateway_count = 7;

  // Max device count.
  // 0 = unlimited.
  uint32 max_device_count = 8;
}

message ListOrganisationsResponse {
  // Total number of tenants.
  uint32 total_count = 1;

  // Result-set.
  repeated OrganisationListItem result = 2;
}